# Sunil Mehta's Udacity Project 5
version: 2.1

commands:
  # Exercise - Delete image from docker hub
  delete-image:
    description: This command deletes the docker image from docker hub
    steps:
      - run:
          name: delete image
          when: on_fail
          command: |
            echo "deleting image"
            docker run --rm -it mrsunilmehta/project5:latest -u ${DOCKER_USER} -p ${DOCKER_PWD}

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  install:
    executor: python
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install libuv1.dev
            sudo apt-get install python3-venv
            python3 -m venv virtualenv
            . virtualenv/bin/activate
            make install
            make env
      - save_cache:
          paths:
            - ./virtualenv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      
      - run:
          name: run lint
          command: |
            . virtualenv/bin/activate
            make lint

  push-image:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          # Build, tag and push my docker image to docker hub
          name: Push my docker image to docker hub
          command: |
            # Define Docker user name and password as env  variables in circleci          
            docker login -u ${DOCKER_USER} -p ${DOCKER_PWD}
            # Build docker image                       
            docker build -t mrsunilmehta/project5:${CIRCLE_WORKFLOW_ID:0:5} .
            # Tag image before pushing
            docker tag mrsunilmehta/project5:${CIRCLE_WORKFLOW_ID:0:5} mrsunilmehta/project5:latest
            # Push to docker hub            
            docker push mrsunilmehta/project5:latest            
      # Here's where you will add some code to rollback on failure
      - delete-image      


  install-eks-kube:
    executor: aws-eks/python3
    steps:
      - kubernetes/install

  create-eks-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Sunil EKS Cluster
        type: string
        
    steps:
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          aws-region: ${AWS_DEFAULT_REGION}
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: ${AWS_DEFAULT_REGION}          
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment/project5-app-deployment.yml
          resource-name: deployment/sunilproject5  
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment/project5-lb.yml
          resource-name: deployment/sunilproject5                   


  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Testing EKS cluster
        type: string
    steps:
      - run:
          name: Test cluster
          command: |
            # some time for creation
            sleep 51          
            kubectl get svc
            kubectl get nodes
            kubectl get deployment
            kubectl get pods -o wide            

  delete-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          deleting EKS cluster
        type: string
    steps:
      - aws-eks/delete-cluster:
          cluster-name: << parameters.cluster-name >>
          aws-region: ${AWS_DEFAULT_REGION}
          wait: true     
      # Here's where you will add some code to rollback on failure
      - delete-image 
                 

workflows:
  deployment:
    jobs:
      - install
      - push-image:
          requires:
            - install      
      - install-eks-kube:
          requires:
            - install               
      - create-eks-cluster:
          cluster-name: sunil-eks-cluster      
          requires:
            - install-eks-kube       
      - test-cluster:
          cluster-name: sunil-eks-cluster
          requires:
            - create-eks-cluster          
      - delete-cluster:
          cluster-name: sunil-eks-cluster
          requires:
            - test-cluster          
